name: Docker Image CI

# debugging
on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

#on:
#  release:
#    types:
#      - published
#      - edited

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    env:
      APP_NAME: "rdurica/app1"  # <-- Name of application

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Clear Docker Build Cache
        run: docker builder prune --all --force
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Validate composer.json and composer.lock
        run: composer validate --strict
        working-directory: ./src

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        working-directory: ./src

      -
        name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.prod.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.sha}},mode=max

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        uses: docker/bake-action@v4
        with:
          pull: true
          push: true
          files: |
            compose.prod.yaml
          set: |
            *.tags=${{ env.APP_NAME }}:${{ github.ref_name }}
            *.tags=${{ env.APP_NAME }}:latest
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{ github.sha }},mode=max

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'

      - name: Verify cosign installation
        run: |
          cosign version

      # Keyless signing
      - name: Keyless Sign Docker Image
        run: |
          cosign sign ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}
          cosign sign ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest

      # Keyless verification
      - name: Verify Keyless Signature
        run: |
          cosign verify ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ github.ref_name }}
          cosign verify ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest